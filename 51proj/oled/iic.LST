C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN iic.OBJ
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   : 
  11          //  功能描述   : OLED IIC接口演示例程(51系列)
  12          //              说明: 
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接高
  19          //              DC   接地
  20          //              CS   接地                
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   : 
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/
  30          #include "reg52.h"
  31          #include "intrins.h"
  32          #define high 1
  33          #define low 0 
  34          /*************Pin Define***************/
  35          sfr P2M1 = 0x95;
  36          sfr P2M0 = 0x96;
  37          sbit P20 = P2^0;
  38          sbit P21 = P2^1;
  39          
  40          sbit SCL=P2^2;
  41          sbit SDA=P2^3;
  42          /****************************************************/
  43          void Initial_LY096BG30();
  44          void Delay_50ms(unsigned int Del_50ms);
  45          void Delay_1ms(unsigned int Del_1ms);
  46          void fill_picture(unsigned char fill_Data);
  47          void Picture_1();
  48          void IIC_Start();
  49          void IIC_Stop();
  50          void Write_IIC_Command(unsigned char IIC_Command);
  51          void Write_IIC_Data(unsigned char IIC_Data);
  52          bit Write_IIC_Byte(unsigned char IIC_Byte);
  53          /***********************Initial code*********************/
  54          void Initial_LY096BG30()
  55          {
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 2   

  56   1              Write_IIC_Command(0xAE);   //display off
  57   1              Write_IIC_Command(0x20);        //Set Memory Addressing Mode    
  58   1              Write_IIC_Command(0x00);        //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing M
             -ode (RESET);11,Invalid
  59   1      //      Write_IIC_Command(0xb0);        //Set Page Start Address for Page Addressing Mode,0-7
  60   1              Write_IIC_Command(0xc8);        //Set COM Output Scan Direction
  61   1              Write_IIC_Command(0x00);//---set low column address
  62   1              Write_IIC_Command(0x10);//---set high column address
  63   1              Write_IIC_Command(0x40);//--set start line address
  64   1              Write_IIC_Command(0x81);//--set contrast control register
  65   1              Write_IIC_Command(0x7f);
  66   1              Write_IIC_Command(0xa1);//--set segment re-map 0 to 127
  67   1              Write_IIC_Command(0xa6);//--set normal display
  68   1              Write_IIC_Command(0xa8);//--set multiplex ratio(1 to 64)
  69   1              Write_IIC_Command(0x3F);//
  70   1              Write_IIC_Command(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  71   1              Write_IIC_Command(0xd3);//-set display offset
  72   1              Write_IIC_Command(0x00);//-not offset
  73   1              Write_IIC_Command(0xd5);//--set display clock divide ratio/oscillator frequency
  74   1              Write_IIC_Command(0xf0);//--set divide ratio
  75   1              Write_IIC_Command(0xd9);//--set pre-charge period
  76   1              Write_IIC_Command(0x22); //
  77   1              Write_IIC_Command(0xda);//--set com pins hardware configuration
  78   1              Write_IIC_Command(0x12);
  79   1              Write_IIC_Command(0xdb);//--set vcomh
  80   1              Write_IIC_Command(0x20);//0x20,0.77xVcc
  81   1              Write_IIC_Command(0x8d);//--set DC-DC enable
  82   1              Write_IIC_Command(0x14);//
  83   1              Write_IIC_Command(0xaf);//--turn on oled panel 
  84   1      }
  85          /***********************Picture Code**************************/
  86          unsigned char code show1[]=
  87          {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  88          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  89          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  90          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  91          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  92          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  93          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  94          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  95          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  96          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  97          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  99          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 100          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 101          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 102          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 103          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 104          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 105          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 106          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 108          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 109          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 110          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 111          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 112          0x00,0x00,0x00,0x00,0x7F,0x01,0x01,0x01,0x7D,0x7D,0x01,0x01,0x02,0x7C,0x00,0x00,
 113          0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 115          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 3   

 117          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 118          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 119          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 120          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 121          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 122          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 123          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 124          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 125          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 126          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 127          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 128          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 129          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 130          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 131          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 132          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 133          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 134          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 135          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 136          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 137          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 138          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 139          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 140          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 141          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 142          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 143          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 144          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 145          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 146          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 147          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 148          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 149          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 150          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 151          };
 152          /**********************************************
 153          //IIC Start
 154          **********************************************/
 155          void IIC_Start()
 156          {
 157   1         SCL = high;
 158   1         //Delay_us(1);               
 159   1         SDA = high;
 160   1         _nop_();
 161   1         SDA = low;
 162   1         _nop_();_nop_();
 163   1         SCL = low;
 164   1      
 165   1      }
 166          
 167          /**********************************************
 168          //IIC Stop
 169          **********************************************/
 170          void IIC_Stop()
 171          {
 172   1         SDA = low;
 173   1         _nop_();
 174   1         SCL = high;
 175   1         _nop_();_nop_();
 176   1         SDA = high;
 177   1      }
 178          /**********************************************
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 4   

 179          // IIC Write byte
 180          **********************************************/
 181          bit Write_IIC_Byte(unsigned char IIC_Byte)
 182          {
 183   1              unsigned char i;
 184   1              bit Ack_Bit;                    //应答信号
 185   1              for(i=0;i<8;i++)                
 186   1              {
 187   2                      if(IIC_Byte & 0x80)             //1?0?
 188   2                      SDA=high;
 189   2                      else
 190   2                      SDA=low;
 191   2                      //Delay_us(1);
 192   2                      SCL=high;
 193   2                      _nop_();_nop_();
 194   2                      SCL=low;
 195   2                      //Delay_us(1);
 196   2                      IIC_Byte<<=1;                   //loop
 197   2              }
 198   1               SDA = high;                            //释放IIC SDA总线为主器件接收从器件产生应答信号 
 199   1              _nop_();_nop_();
 200   1              SCL = high;                     //第9个时钟周期
 201   1              _nop_();_nop_();
 202   1              Ack_Bit = SDA;                      //读取应答信号
 203   1              SCL = low;
 204   1              return Ack_Bit; 
 205   1      }  
 206          /**********************************************
 207          // IIC Write Command
 208          **********************************************/
 209          void Write_IIC_Command(unsigned char IIC_Command)
 210          {
 211   1         IIC_Start();
 212   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 213   1         Write_IIC_Byte(0x00);                        //write command
 214   1         Write_IIC_Byte(IIC_Command); 
 215   1         IIC_Stop();
 216   1      }
 217          /**********************************************
 218          // IIC Write Data
 219          **********************************************/
 220          void Write_IIC_Data(unsigned char IIC_Data)
 221          {
 222   1         IIC_Start();
 223   1         Write_IIC_Byte(0x78);                        
 224   1         Write_IIC_Byte(0x40);                        //write data
 225   1         Write_IIC_Byte(IIC_Data);
 226   1         IIC_Stop(); 
 227   1      }
 228          /********************************************
 229          // fill_Picture
 230          ********************************************/
 231          void fill_picture(unsigned char fill_Data)
 232          {
 233   1              unsigned char m,n;
 234   1              
 235   1              for(m=0;m<8;m++)
 236   1              {
 237   2                      Write_IIC_Command(0xb0+m);              //page0-page1
 238   2                      Write_IIC_Command(0x00);                //low column start address
 239   2                      Write_IIC_Command(0x10);                //high column start address
 240   2                      IIC_Start();
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 5   

 241   2                      Write_IIC_Byte(0x78);
 242   2                      Write_IIC_Byte(0x40);
 243   2                      for(n=0;n<128;n++)
 244   2                      {
 245   3                              
 246   3                              Write_IIC_Byte(fill_Data);
 247   3                              
 248   3                      }
 249   2                       IIC_Stop();
 250   2              }
 251   1              
 252   1      }
 253          /******************************************
 254          // picture
 255          ******************************************/
 256          void picture_1()
 257          {
 258   1        unsigned char x,y;
 259   1        unsigned int i=0;
 260   1        for(y=0;y<8;y++)
 261   1          {
 262   2            Write_IIC_Command(0xb0+y);
 263   2            Write_IIC_Command(0x00);
 264   2            Write_IIC_Command(0x10);
 265   2            for(x=0;x<128;x++)
 266   2              {
 267   3                Write_IIC_Data(0xff);
 268   3              }
 269   2          }
 270   1      }
 271          void picture_2()
 272          {
 273   1        unsigned char x,y;
 274   1        unsigned int i=0;
 275   1        for(y=0;y<8;y++)
 276   1          {
 277   2            Write_IIC_Command(0xb0+y);
 278   2            Write_IIC_Command(0x00);
 279   2            Write_IIC_Command(0x10);
 280   2            for(x=0;x<128;x++)
 281   2              {
 282   3                Write_IIC_Data(0x00);
 283   3              }
 284   2          }
 285   1      }
 286          /***********************Delay****************************************/
 287          void Delay_50ms(unsigned int Del_50ms)          //
 288          {
 289   1              unsigned int m;
 290   1              for(;Del_50ms>0;Del_50ms--)
 291   1                      for(m=6245;m>0;m--);
 292   1      }
 293          
 294          void Delay_1ms(unsigned int Del_1ms)            //
 295          {
 296   1              unsigned char j;
 297   1              while(Del_1ms--)
 298   1              {       
 299   2                      for(j=0;j<123;j++);
 300   2              }
 301   1      }
 302          void sss()
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 6   

 303          {
 304   1              unsigned int i;
 305   1      //      Write_IIC_Command(0x22);                //page0-page1
 306   1      //      Write_IIC_Command(0x00);                //low column start address
 307   1      //      Write_IIC_Command(0x07);
 308   1              IIC_Start();
 309   1              Write_IIC_Byte(0x78);
 310   1              Write_IIC_Byte(0x40);
 311   1              for(i = 0; i < 5; i++)
 312   1              {
 313   2                      Write_IIC_Byte(0xff);
 314   2              }
 315   1              IIC_Stop();
 316   1      }
 317          void ddd()
 318          {
 319   1              unsigned int i;
 320   1      //      Write_IIC_Command(0x22);                //page0-page1
 321   1      //      Write_IIC_Command(0x00);                //low column start address
 322   1      //      Write_IIC_Command(0x07);
 323   1              IIC_Start();
 324   1              Write_IIC_Byte(0x78);
 325   1              Write_IIC_Byte(0x40);
 326   1              for(i = 0; i < 5; i++)
 327   1              {
 328   2                      Write_IIC_Byte(0x00);
 329   2              }
 330   1              IIC_Stop();
 331   1      }
 332          /*******************************Main*******************************/
 333          void main(void)
 334          {
 335   1              P2M0 = 0x03;
 336   1              P2M1 = 0x00;
 337   1              P20 = 0;
 338   1              P21 = 1;
 339   1              Delay_1ms(100);
 340   1              Initial_LY096BG30();
 341   1              Delay_1ms(5);
 342   1              while(1)
 343   1              {
 344   2                      
 345   2      //              Picture_1();            Delay_50ms(25);
 346   2      //              picture_2();            Delay_50ms(25);
 347   2      //              fill_picture(0xff);     Delay_50ms(25);
 348   2      //              fill_picture(0x00);     Delay_50ms(25);
 349   2                      sss();
 350   2                      Delay_50ms(4);
 351   2                      ddd();
 352   2                      Delay_50ms(4);
 353   2              }
 354   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
C51 COMPILER V9.60.0.0   IIC                                                               10/21/2022 14:11:49 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
