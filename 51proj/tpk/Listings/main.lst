C51 COMPILER V9.60.0.0   MAIN                                                              09/27/2022 20:25:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          u16 TK_val = 0;
   7          u16 TK_tval = 0;
   8          u8 TKEY_Flag = 0;
   9          u8 kes = 0;
  10          u8 dutyup = 0;
  11          u16 press_cnt = 0;
  12          u8 pwm_duty = 100;
  13          
  14          sfr IE_EX = 0xe8;
  15          sfr P1_MOD_OC = 0x92;
  16          sfr P1_MOD_PU = 0x93;
  17          sfr PIN_FUNC = 0xc6; // gpio af reg
  18          // 按键
  19          sfr TKEY_CTRL = 0xc3;
  20          sfr TKEY_DATH = 0xc5;
  21          sfr TKEY_DATL = 0xc4;
  22          
  23          
  24          // pwm
  25          sfr PWM_CK_SE = 0x9e;
  26          sfr PWM_CTRL = 0x9d;
  27          sfr PWM_DATA1 = 0x9c;
  28          
  29          
  30          
  31          sbit P30 = P3^0; // led
  32          
  33          void delay(u16 time)
  34          {
  35   1              while(time--)
  36   1                      _nop_();
  37   1      }
  38          void Init_TK(void)
  39          {
  40   1              P1_MOD_OC = 0xfd;
  41   1              P1_MOD_PU = 0xfd;
  42   1              TKEY_CTRL |= 0x12; // p11
  43   1              IE_EX |= 0x02; 
  44   1              EA = 1;
  45   1              
  46   1      }
  47          void Init_PWM(void)
  48          {
  49   1              PWM_CK_SE = 1;
  50   1              PWM_CTRL = 0x04;
  51   1              PWM_DATA1 = 0;
  52   1              
  53   1      }
  54          void addduty(void)
C51 COMPILER V9.60.0.0   MAIN                                                              09/27/2022 20:25:50 PAGE 2   

  55          {
  56   1              if(PWM_DATA1 < 255)
  57   1                      PWM_DATA1++;
  58   1      }
  59          void decduty(void)
  60          {
  61   1              if(PWM_DATA1)
  62   1                      PWM_DATA1--;
  63   1      }
  64          void key_event(u8 keyflag)
  65          {
  66   1              if(keyflag == 1)
  67   1              {
  68   2                      if(kes == 0)
  69   2                      {
  70   3                              kes = 1;
  71   3                              if(dutyup)
  72   3                                      dutyup = 0;
  73   3                              else
  74   3                                      dutyup = 1;
  75   3                              
  76   3                      }
  77   2                      else if(kes == 1)
  78   2                              if(press_cnt < 200)
  79   2                              {
  80   3                                      press_cnt++;
  81   3                              }
  82   2                              else
  83   2                              {
  84   3                                      if(dutyup)
  85   3                                      {
  86   4                                              addduty();
  87   4                                      }
  88   3                                      else
  89   3                                      {
  90   4                                              decduty();
  91   4                                      }
  92   3                              }
  93   2              }
  94   1              else if(keyflag == 0 && (press_cnt < 200 && press_cnt > 0))
  95   1              {
  96   2                      if(PWM_DATA1)
  97   2                      {
  98   3                              pwm_duty = PWM_DATA1;
  99   3                              PWM_DATA1 = 0;
 100   3                      }
 101   2                      else
 102   2                              PWM_DATA1 = pwm_duty;
 103   2                      kes = 0;
 104   2                      press_cnt = 0;
 105   2              }
 106   1              else
 107   1              {
 108   2                      kes = 0;
 109   2                      press_cnt = 0;
 110   2              }
 111   1      }
 112          void main(void)
 113          {
 114   1              
 115   1              Init_TK();
 116   1              Init_PWM();
C51 COMPILER V9.60.0.0   MAIN                                                              09/27/2022 20:25:50 PAGE 3   

 117   1              
 118   1              while(1)
 119   1              {
 120   2                      key_event(TKEY_Flag);
 121   2                      delay(3000);
 122   2              }
 123   1      }
 124          
 125          void IRQ_TK(void) interrupt 7
 126          {
 127   1              TK_tval = TKEY_DATL;
 128   1              TK_tval |= (TKEY_DATH & 0xef) << 8; // 
 129   1              if(TK_val == 0)
 130   1              {
 131   2                      //init
 132   2                      TK_val = TK_tval;
 133   2                      TKEY_CTRL |= 0x12;
 134   2                      return;
 135   2              }
 136   1              if(TK_tval >=  TK_val) // 变大 按键松开
 137   1              {
 138   2                      if((TK_tval - TK_val) > 2000)
 139   2                      {
 140   3                              TKEY_Flag = 0;
 141   3                      }
 142   2              }
 143   1              else if(TK_tval <  TK_val) // 变小 按键按下
 144   1              {
 145   2                      if((TK_val - TK_tval) > 2000)
 146   2                      {
 147   3                              TKEY_Flag = 1;
 148   3                      }
 149   2              }
 150   1              TK_val = TK_tval;
 151   1              TKEY_CTRL |= 0x12; // p11
 152   1      }
 153          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
